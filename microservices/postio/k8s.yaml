apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: '{{ microservice.name }}'
      hasuraService: custom
    name: '{{ microservice.name }}'
    namespace: '{{ cluster.metadata.namespaces.user }}'
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: '{{ microservice.name }}'
      spec:
        containers:
        - image: analogic:poste.io
          imagePullPolicy: IfNotPresent
          name: '{{ microservice.name }}'
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
        securityContext: {}
        terminationGracePeriodSeconds: 0
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: '{{ microservice.name }}'
      hasuraService: custom
    name: '{{ microservice.name }}'
    namespace: '{{ cluster.metadata.namespaces.user }}'
  spec:
    ports:
    - port: 25
      name: 'smtp'
      protocol: TCP
      targetPort: 25
    - port: 80
      name: 'http'
      protocol: TCP
      targetPort: 80
    - port: 443
      name: 'https'
      protocol: TCP
      targetPort: 443
    - port: 110
      name: 'pop3'
      protocol: TCP
      targetPort: 110
    - port: 143
      name: 'imap'
      protocol: TCP
      targetPort: 143
    - port: 465
      name: 'smtps'
      protocol: TCP
      targetPort: 465
    - port: 587
      name: 'msa'
      protocol: TCP
      targetPort: 587
    - port: 993
      name: 'imaps'
      protocol: TCP
      targetPort: 993
    - port: 995
      name: 'pop3s'
      protocol: TCP
      targetPort: 995
    selector:
      app: '{{ microservice.name }}'
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
